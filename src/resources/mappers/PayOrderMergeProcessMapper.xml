<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ihavecar.payment.mapper.PayOrderMergeProcessMapper" >
  <resultMap id="BaseResultMap" type="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    <id column="pay_order_no" property="payOrderNo" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="curr_status" property="currStatus" jdbcType="INTEGER" />
    <result column="pre_status" property="preStatus" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ihavecar.payment.entity.PayOrderMergeProcess" extends="BaseResultMap" >
    <result column="remarks" property="remarks" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    pay_order_no, id, curr_status, pre_status, create_by, create_time, del_flag
  </sql>
  <sql id="Blob_Column_List" >
    remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pay_order_merge_process
    where pay_order_no = #{payOrderNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pay_order_merge_process
    where pay_order_no = #{payOrderNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    insert into pay_order_merge_process (pay_order_no, id, curr_status, 
      pre_status, create_by, create_time, 
      del_flag, remarks)
    values (#{payOrderNo,jdbcType=VARCHAR}, #{id,jdbcType=BIGINT}, #{currStatus,jdbcType=INTEGER}, 
      #{preStatus,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=CHAR}, #{remarks,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    insert into pay_order_merge_process
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payOrderNo != null" >
        pay_order_no,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="currStatus != null" >
        curr_status,
      </if>
      <if test="preStatus != null" >
        pre_status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payOrderNo != null" >
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="currStatus != null" >
        #{currStatus,jdbcType=INTEGER},
      </if>
      <if test="preStatus != null" >
        #{preStatus,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    update pay_order_merge_process
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="currStatus != null" >
        curr_status = #{currStatus,jdbcType=INTEGER},
      </if>
      <if test="preStatus != null" >
        pre_status = #{preStatus,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pay_order_no = #{payOrderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    update pay_order_merge_process
    set id = #{id,jdbcType=BIGINT},
      curr_status = #{currStatus,jdbcType=INTEGER},
      pre_status = #{preStatus,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR},
      remarks = #{remarks,jdbcType=LONGVARCHAR}
    where pay_order_no = #{payOrderNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ihavecar.payment.entity.PayOrderMergeProcess" >
    update pay_order_merge_process
    set id = #{id,jdbcType=BIGINT},
      curr_status = #{currStatus,jdbcType=INTEGER},
      pre_status = #{preStatus,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where pay_order_no = #{payOrderNo,jdbcType=VARCHAR}
  </update>
</mapper>